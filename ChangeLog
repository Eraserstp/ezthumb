20120717: V2.1.5
  + Expended the profile system.
    The profile now accept a logarithmic formula to take screen shots.
    The formula is 
        lg(n)(M + a) - b
    'n' is the base. 'M' is the video length in minutes. 
    The related profile item is 
        WEIGHT + 'L' + a + 'x' + b + 'x' + n.
    For example, the default profile is 180L10x100x1.027, so if a video
    length is 120 minutes, it would take
        lg(1.027)(120+10) - 100 == 82 shots
    Combined with the relative screen size profile 100R4x320, which means
    to generate 4 shots in a row, each shot closed to 320 in width. 
    It will generate a 4x21 thumbnail array.
  + A hidden command line option, --protest, was applied to test the 
    new profile system and help to find out the proper parameter of the
    formula.

20120620: V2.1.4
  + Fixed a build system problem in Win32. The install rule in the Makefile
    required ezthumb.exe and ezthumb_win.exe rule. After a successful
    building, the object files would be the GUI version at last. The install
    rule will make it link again so the console version ezthumb accidentally
    linked by the GUI version objects, which is annoying.

20120615: V2.1.3
  + Fixed a problem that when the video length ran out of the profile range,
    say 180 minute, ezthumb would use the default 4x4 grid which was bad.
    The fix extended the profile's range so if video ran out, it uses the
    last field of the profile.

20120613: V2.1.2
  + Fixed the Chinese filename issue.
  This issue happened on MS Windows porting. If the filename, or part of the
  directory contain Chinese, for example, ²âÊÔÎÄ¼þ, which isnatively
  \262\342\312\324\316\304\274\376 in Windows file system, it would be failed
  to be open because the GTK file chooser changed it to utf-8, which is
  230 181 139 232 175 149 230 150 135 228 187 182. The fopen() doesn't know 
  the conversion so it fails. The fix is to use g_fopen() instead.

  A good thing is the avformat_open_input() supports utf-8 itself so the
  simple replacement of fopen() can do the trick.

20120612: V2.1.1
  + improved the file type selection function
  + fixed the application icon issue in MS Windows

20120413: V2.1.0
  + introduced the safe mode as the default single step
  + introduced the dual frame buffer
  + improved the towpass mode

20120403:
  + ezthumb.c: improved twopass method after sanity test.
    Replace the scan mode with the safe mode
  + ezthumb.c: decode-on-the-fly is now the default setting.
    --decode-otf option will still be available but no effect at all

20120322:
  + ezthumb.c: reapply the twopass method

20120320:
  + ezthumb.c: introduced two frame buffers while decoding, one is the 
    current decoded frame and another one is the previous decoded frame.
    It could be useful while deciding the closest frames.

20120316:
  + main.c/ezthumb.c: introduced the safe mode as part of the -p option.

20120315: V2.0.1
  + main.c: fixed the '-p key' issue which caused by the profile
  + workaround for DVB rip file by this option:
    ezthumb -p scan --accurate --decode-otf Argus_20120222-114427384.ts

20120313:
  + video_duration(): there are two issues in this function. First the video
  header might be non-existed or inaccurate. In that case the video duration
  could be a redicules number. Using a bitrate threshold to workaround this
  problem. Second is that in the function avformat_seek_file(), the
  AVSEEK_FLAG_BYTE acts terrible (with middle.avi). Sometimes there is no way
  to seek to 90% of the video file so have to make a workabound.
 
20120214: V2.0.0
  + GUI mode added

20111214: V1.5.8
  + ezthumb.c, main.c: improved progress display for i-frame ripping by using
  DTS as the indicator

20111213:
  + ezthumb.c: verify the validation of the video file by checking its screen
  resolution and by opening the file.

20111204: V1.5.7
  + smm_signal_break.c: Fixed a bug that the custom signal callback was not
  hooked indeed.

20111125: FFMPEG version list
  + Finally found the culprit. There were two FFMPEG installs in my 
    ubuntu 10.10. One was 0.6.x. Another one appeared as 0.8.x. 
    By removing the latter the problem is gone.

Library:        libavformat  libavcodec  libavdevice  libavutil  libswscale  libavfilter
ffmpeg-0.6.1:   52.64.2      52.72.2     52.2.0       50.15.1    0.11.0      1.19.0
ffmpeg-0.6.3:   52.64.2      52.72.2     52.2.0       50.15.1    0.11.0      1.19.0
ffmpeg-0.7.8:   52.111.0     52.123.0    52.5.0       50.43.0    0.14.1      1.80.0
ubuntu 10.10:   52.64.2      52.72.2     52.2.0       50.15.1    0.11.0
ubuntu extra:   53.0.3       53.1.1      53.0.0       51.1.0     0.14.0



20111124:
  + I've got sick off the endless guess work about the FFMPEG's API version
    changes so I downloaded the 0.7.8 to revise the proper version macro.
    I believe most parts are fine except the av_dump_format(). There's no clue
    of when it was introduced.
  + Apparently the FFMPEG's APIChanges.txt has something wrong about the 
    version and avformat_open_input(). Defer to current FFMPEG lib
  + Made up the missing freetype6.dll in the Windows release

20111123: V1.5.6
  + Merged partly from guidev about the LIBAVFORMAT_VERSION macro to 
    make the makefile workable in archlinux, ubuntu 10.10 and mingw
  + Implemented a simple build-in profile.

20111122: 
  + Release tag: RELEASE_1_5_5
  + All .a files were missing under the mswin/ directory because of the 
    wrong setting of the .gitignore file. Now retrieved them.

20111115: V1.5.5 
  + Integrated other libraries into the mswin branch so they could 
    be managed by git
  + Revisioned the makefile for MinGW

20111104:
  + Revisioned this project in MinGW and made it workable in MS Windows
  + Fixed the conditional compiling error for the FFMPEG version control

20111021: V1.5.4
  + merged the id_*.c into id_lookup.c
  + slightly adjusted the Makefile

20111021: V1.5.3
  + Release tag: RELEASE_1_5_3
  + Merge two branches into the new version for release

20111021: V1.5.2
  + Supported the maximum number when ripping the key frames
    Command line now support the '-p key@N' opion

20111007: V1.5.2
  + Added a rectify function in video_snapshot_skim() to speed up the
    doing in the unseekable media files.
  + Refined the video_find_stream() so it could also support 0.6.3 ffmpeg

20111006: V1.5.1
  + Fixed a bug of finding the video stream, now using av_find_best_stream().
  + Added the signal handler. Now ezthumb can be broken in the middle.

20111001: V1.5.0
  Make fixes and ready for release

20110908: V1.4.2
  Displaying the screen shot method has been moved into video_snap_begin()

20110908: V1.4.1
  heuristic method is ready for test.

20110906: V1.4.0
  Many codes regroups in recent day. Begin with a thought that reducing 
  scan passes if video file doesn't support backward seek. I roughly
  have got an idea of a heuristic method. Hope it can be done in 1.4.1

20110831:
  + ezthumb.c: a little bit speed up of the video_duration() function

20110830: V1.3.3
  + ezthumb.c: duration structure changed

20110829:
  + main.c: '--index' option and adjust the '-i', '-S' and '-I' options
  + ezthumb.c: fixed the bug about no video stream issue
  + LIBAVFORMAT_VERSION_MAJOR: is used to control the depreciated APIs
  - BUGGY: the "APIchanges" in FFMPEG has error in av_open_input_file() so
    the version number is not correct about this
    function.

20110824: V1.3.2
  + eznotify.c: fixed a bug that calling the eznotify() with null pointer

20110821: V1.3.1
  + main.c: add '-I' option and move av_log_set_level() to main()
  + ezthumb.c: video_seek_available() fixed a bug that desn't rewind the video
    stream when this function failed.
  - A problem: if the video clip is shorted than it claimed, the output would
    be nasty

20110820: V1.3
  + ezthumb.c: fixed the buggy video_ms_to_pts() and video_system_to_pts()

20110819: merged change from 1.2.2, the '--outdir' option
  + main.c: add command line option "--linear" to indicate the ezthumb
    to walk through the whole video rather than using av_seek_frame()
    Change command line option "--opt-key" to "--anyframe"

20110818: pre V1.3
  + main.c: use a generic event_cb() to handle all notifications.
  + eznotify.c: generic module to handle all notifications.
  + ezthumb.c: isolated the functions to generate thumbnails to:
    video_save_scan_pass(), video_save_quick_pass()
    The problem comes with some .wmv files which could not apply 
    av_seek_frame(). The solution is to walk through the whole video from
    first packet to the last.

20110302:
  + main.c: add command line options to set up colours and font size.

20110301:
  + ezthumb.c: fix the coredump if using still images as input sources.

20110227: V1.2
  + support setting the starting and the ending time position
  + add a status line to the bottom of the canvas

20110223: V1.1
  + support the animated GIF
  + support the transparent background


