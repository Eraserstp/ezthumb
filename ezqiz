#!/bin/bash

VIEWER=eog

# $1: command line options
# $2: case number like 01.03
# $3: group comments
# $4: case comments
# $5+: video file name
run()
{
  local LOGNAME=quicklog
  local TARGET=
  echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  echo $2: $3
  echo $4
  echo CMD: ezthumb $1 ${@:5}
  echo +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  eval ezthumb $1 ${@:5} | tee $LOGNAME
  TARGET=`grep OUTPUT $LOGNAME | cut -d" " -f2`
  rm $LOGNAME
  echo

  for i in $TARGET
  do
    if [ -f $i ]; then
      eval $VIEWER $i
      rm $i
    fi
  done
}

# test_NN_MM($1 $2 $3) function definitions
# $1: case number like 01.03
# $2: group comments
# $3+: video file name

#############################################################################
# Group 01: Basic functions
#############################################################################
test_01_01()
{
  local COMM="Generate 4x4 thumbnails, 50% screen size"
  run "-g 4x4 -s 50%" "$1" "$2" "$COMM" ${@:3}
}

test_01_02()
{
  local COMM="Generate 4x4 thumbnails, 50% screen size with the most accurate frames"
  run "-g 4x4 -s 50% --accurate" "$1" "$2" "$COMM" ${@:3}
}

test_01_03()
{
  local COMM="Generate thumbnails according to the default profile"
  run " " "$1" "$2" "$COMM" ${@:3}
}

test_01_04()
{
  local THPATH=./mydir/thumbnails
  local COMM="Save thumbnails at specified directory ($THPATH)"
  if [ ! -d $THPATH ]; then 
    mkdir -p $THPATH
  fi
  run "-o $THPATH" "$1" "$2" "$COMM" ${@:3}
  rm -r $THPATH
}

test_01_05()
{
  local FILE="mythumb.jpg"
  local COMM="Specify the file name of the thumbnail ($FILE)"
  run "-o $FILE" "$1" "$2" "$COMM" ${@:3}
}

test_01_06()
{
  local COMM="Specify the suffix of the output files"
  run "-x _pi.c-th_" "$1" "$2" "$COMM" ${@:3}
}

#############################################################################
# Group 02: Media information
#############################################################################
test_02_01()
{
  local COMM="Display the SIMPLE information of specified media file"
  run "-i" "$1" "$2" "$COMM" ${@:3}
}

test_02_02()
{
  local COMM="Display the DETAILED information of specified media file"
  run "-I" "$1" "$2" "$COMM" ${@:3}
}

test_02_03()
{
  local COMM="Display the detail information with a FULL SCAN of the media file"
  run "-I -d scan" "$1" "$2" "$COMM" ${@:3}
}

test_02_04()
{
  local COMM="Display the detail information with a QUICK SCAN of the media file"
  run "-I -d fast" "$1" "$2" "$COMM" ${@:3}
}

test_02_05()
{
  local COMM="Check the result of '-d' option: see the difference in a broken file"
  run "-i" "$1" "$2" "$COMM" ${@:3}
  run "-i -d fast" "$1" "$2" "$COMM" ${@:3}
}

#############################################################################
# Group 03: Canvas attribution
#############################################################################
test_03_01()
{
  local COMM="Specify the colours: Information is BLUE, Timestamp is RED, Background is grey"
  run "-c 0000ff:ff0000:7f7f7f" "$1" "$2" "$COMM" ${@:3}
}

test_03_02()
{
  local COMM="Only setup the background colour to grey"
  run "-c ::7f7f7f" "$1" "$2" "$COMM" ${@:3}
}

test_03_03()
{
  local COMM="Set up a 4-pixel-width black edge around each thumbnail"
  run "--edge 4" "$1" "$2" "$COMM" ${@:3}
}


# automatic test inside a specified group
# it will maintain a list of each testing group with group number and cases
# $1: group number
# $2: case number in the group (0=all)
# $3+: video file name
group_test()
{
  TGROUP=`printf %02d $1`
  case $TGROUP in
    01) GRPCOMM='Basic Functionality Test';
	GRPCASE=`echo {01..06}` ;;
    02) GRPCOMM='Media Information Test';
	GRPCASE=`echo {01..05}` ;;
    03) GRPCOMM='Canvas Attribution Test';
	GRPCASE=`echo {01..03}` ;;
    *) return ;;
  esac

  if [ "$2" = "00" ]; then
    for i in $GRPCASE
    do
      test\_$TGROUP\_$i $TGROUP.$i "$GRPCOMM" ${@:3}
    done
  else
    i=`printf %02d $2`
    test\_$TGROUP\_$i $TGROUP.$i "$GRPCOMM" ${@:3}
  fi
}

usage_exit()
{
  cat << my_usage
usage: ezqiz [-nn.mm] video_file_name
  nn: the test group number
  mm: the test case number
my_usage
  exit 0
}


while [ $# != 0 ]
do  case "$1" in
  -h|--help)
    usage_exit ;;
  -auto)
    GROUP=auto ;;
  -dir)
    echo $1
    shift
    echo REST:$@ 
    exit;;
  -*)
    GROUP=`echo ${1:1} | cut -d. -f1`
    CASES=`echo ${1:1} | cut -s -d. -f2`
    if [ "$CASES" = "" ]; then
      CASES="00"
    fi
    #echo $GROUP $CASES
    ;;
  *) 
    break ;;
  esac
  shift
done

if [ "$1" = "" ]; then
  usage_exit
fi

if [ "$GROUP" = "auto" ]; then
  for GROUP in {01..03}
  do
    group_test $GROUP 00 $@
  done
  exit
elif [ ! "$GROUP" = "" ]; then
  group_test $GROUP $CASES $@
  exit
fi



