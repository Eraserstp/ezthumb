.TH EZTHUMB 1 "Feb 10, 2011" Linux ""
.SH NAME
ezthumb \- generate thumbnails of video clips
.SH SYNOPSIS
.B ezthumb
.RI [ options ]
.I video_clips...
.SH DESCRIPTION
.B ezthumb
is used to create thumbnails for video files. It uses the 
.SM FFMPEG 
library as its engine so 
.B ezthumb
almost supports any video formats.
Normally the screenshots would be tiled into a single canvas picture or 
compose a single 
.B GIF animation 
file.  However it can also save frames separately.
The output format could be 
.B JPG, PNG, GIF 
or 
.B GIF animation
, where 
.B PNG 
and 
.B GIF 
supports the transparent background. Batch processing allows.

.SH OPTIONS
.TP
.BR \-c , " \-\-colour \fIMI:TM:BG\fP"
Specify the colour of texts and canvas. 
.I MI
is the colour of the media information.
.I TM
is the colour of the inset timestamp and
.I BG
is the canvas' background colour. These colour codes use the same form of
.B RRGGBB
which is composed by Red, Green and Blue. The
.B RRGGBB
must be set by 6 hexadecimal number to make sure the colour won't go wrong,
for example:
.I 0f55f0.

.TP
.BR \-d , " \-\-during \fIhead\fP"
Specify the method to retrieve the duration of videos. Normally the duration can be
retrieved from the head of the video container, which is the default mode
.B " 'head' " .
However, some dodgy files were broken or included the inaccurate duration value.
As an alternative the duration could be retrieved by
.B " 'scan' "
mode.
.B ezthumb
would scan the whole video file to locate the last packet. It is accurate but slow.
The compromise mode is 
.B "'fast'" ,
which only scans the tail part of the video.

If
.B ezthumb
took less screenshots than expected, you may think about using the
.B "'fast'" 
or
.B "'scan'"
options.

.TP
.BR \-f , " \-\-font \fIfilename\fP"
Specify the full path of a TrueType font file, which would
be used to render the media information and the inset timestamp in the output
picture. If this option is not specified, the program will use the internal 
fix-pixel fonts.
Note that the fontconfig patterns is also acceptable.

.TP
.BR \-F , " \-\-fontsize \fIMI:TM\fP"
Set up the pointsize of the font. 
.B MI
is for the text size of the media information and 
.B TM
is for the size of time stamps inside the screen shots.

.TP
.BR \-g , " \-\-grid \fIcolumn x row\fP"
Specify the grid of the screenshots in the canvas. 
The default value is
.I "4x4"
which means to create a 4 columns by 4 rows thumbnail canvas. 
Therefore it would take 16 screen shots in total. 
The time intervals between each shots will be calculated by the duration
of the video and the number of total shots. It could be tuned by 
.BR "\-\-timestep" ,
.BR "\-\-time\-from" ,
.BR "\-\-time\-end" ,
.BR "\-\-opt\-ffr" ,
and
.BR "\-\-opt\-lfr"
options.

Note that there are two
.B tricky
modes in this option. If 
.I column
is 0, 
.B ezthumb
will save screenshots into separate files. 
The suffix of these files would be numbers like
.B _001.jpg, _002.jpg, ...
etc. The total number of screenshots is decided by
.I row .
If
.I row
is 0 too,
.B ezthumb
will save all key frames (I-frame) into separate files. 
So watch out, it might be hundreds.

.TP
.BR \-G , " \-\-gui"
Force
.B ezthumb
to start in the GUI mode. Normally 
.B ezthumb
works in batch mode if there are file names specified in the command line.
The
.BR "\-G"
option can force
.B ezthumb
into GUI mode. All file names in the command line will be loaded into 
the list view.

.TP
.BR \-i , " \-\-list"
Display the general information of media files in the list form. 
This option won't generate any pictures.

.TP
.BR \-I , " \-\-info"
Display the media information. This option won't generate any pictures.

.TP
.BR  \-m , " \-\-format \fIpicture_format\fP"
Specify the output format. 
.B ezthumb
support three formats:
.I jpg, gif
and
.I png.
The
.I jpg
could be followed by an identifier
.I @
and a quality factor. For example, the default format is
.I jpg@85 .
The
.I gif
format can also be followed by a factor. In that case, it means to generate an
.B GIF animation
file. The factor is the time interval in millisecond between each frames. 
For example,
.I gif@1000
means to generate the animated GIF file from the screenshots, and each frame 
of the GIF file will be displayed by 1 second.

.TP
.BR \-o , " \-\-outdir \fIdirectory\fP"
Specify a
.I directory
for storing the output thumbnails. 
Normally the thumbnails would be stored into the same path of the source video.
With this option, however, they can be stored into any directory.
It could be helpful when generating thumbnails from 
.B read-only 
devices like CDROM.

.TP
.BR \-p , " \-\-process \fImethod\fP"
Explicitly specify a method to generate thumbnails.
.B ezthumb
uses a seek-and-decode strategy called
.I "'skim'"
in default. It will seek to the most possible place in the video 
file and start to decode the nearest frame. 
If the video file doesn't support seeking, 
.B ezthumb
will automatically switch to
.I "'heuri'" ,
the heuristic method, where it will scan the whole video file from begining 
to find the proper frame to be decoded.
.I "'heuri'"
is a single-pass strategy which uses heuristic method to decide the position
of the the nearest frame. 
.I "'scan'"
is a single-pass scan strategy too. However, it always scans to
and decode the next nearest key frame. What's more, 
.I "'scan'"
does
.B NOT
support the
.BR "\-\-accurate"
option. On the other hand,
.I "'2pass'"
let
.B ezthumb
scan the video file twice to decide the finest position for decoding.
.I "'key'"
is used to rip key frames. It is almost same to
.BR "'\-g 0x0'"
except it can accept the number of ripped key frames. For example,
.I "key@5"
means to take first 5 key frames from the video clip.
.I "'safe'"
mode is based on the key frame ripping strategy. It decodes every key frames
and picks up the closest frames to compose the thumbnails. 

The default setting can process most of files. However, in dodgy
situation, user might need to specify, or try, one of these strategies.

Note that
.I "'scan'" ,
.I "'2pass'"
and
.I "'heuri'" 
are all scan-based methods. If the video file requires decoding nearby
key frames, the
.BR "\-\-decode\-otf"
options sometimes is quite supportive. 

.TP
.BR \-P , " \-\-profile \fIprofile_string\fP"
Specify a string of profiles to define the size of grid and screen shots. 
In simple, it can be treated as the combination of 
.BR \-g
and
.BR \-s
options. Please see the
.B PROFILES
section below. Note that the
.BR \-P
option would override the internal profiles and configure file profiles,
and the
.BR \-g
and
.BR \-s
options would override the
.BR \-P
option.

.TP
.BR \-R , " \-\-recursive \fIsuffix_filter\fP"
Generate thumbnails from files under specified directories and subdirectories
recursively. If no directory was specified, it would start from the current
directory. A
.I \fIsuffix_filter\fP
string is required to help
.B ezthumb
to filter out the target files. The string is composed by the extension 
filenames separated by comma. For example,
.I "avi,rm,rmvb,mkv,wmv" .
If an empty string was specified, 
.B ezthumb
would try to process every files.

.TP
.BR \-s , " \-\-ssize \fIthumbnail_size\fP"
Specify the width and height of each screen shot. 
It could be defined by pixel like
.I "160x120"
or by a zoom ratio like
.I "50%".
In latter case the screen shot would be 50% of the video frame size 
in either direction, such as 160x120 from a 320x240 video. 

The pixel size doesn't need to follow the original video ratio so that
it could be adjusted to any aspect ratio as you wish.

Note that this option would be overriden by the
.BR \-w
option. If the
.BR \-w
was not specified, the dimension of the canvas would be summed up by the 
size of the screen shot, the grid size and the gaps between screen shots.
However, if the
.BR \-w
option was specified, the width of each shot is deducted from the 
width of canvas and gaps. The height of each shot is calculated by
the aspect ratio of the video.

.TP
.BR \-t , " \-\-timestep \fImillisecond\fP"
Specify the time interval between each screen shots in millisecond.
If this option was not specified, 
.BR ezthumb
would calculate the average interval by the duration of the video and 
the number of total shots.

.TP
.BR \-w , " \-\-width \fIsize_in_pixel\fP"
Specify the width of the thumbnail canvas in pixels. 
This option will override the 
.BR \-s
option and calculate the size of each shots automatically.

.TP
.BR \-x , " \-\-suffix \fIstring\fP"
Specify the suffix of the output file name. For example, if a video file named
.I myvideo.avi
and this option is set to
.B "_pic",
the file name of the generated thumbnail would be
.I myvideo_pic.avi.

.TP
.BR "\-\-accurate"
Let
.B ezthumb
take screen shots at more accurate places. Normally
.B ezthumb
would take screen shots at the nearest key frames (I-Frame). 
It is quick but inaccurate. With this option,
.B ezthumb
would take shots at both I-Frame and P-Frame.
It is slow but accurate in time stamps. Sometimes the picture might be blurred. 

.TP
.BR " \-\-background \fIfilename\fP"
Load a background picture into the thumbnail canvas. It supports
.B JPG
and
.B PNG
format. The background picture is placed in the canvas center by default.
To adjust this, see 
.BR \-\-pos\-bg
option for the details.

.TP
.BR "\-\-decode\-otf"
Specify the decoding-on-the-fly mode. In the scan mode, see the
.BR \-p 
option,
.B ezthumb
does not decode the video frame while scanning. This option, 
on the other hand, would let
.B ezthumb
decode every key frames it met. The unused frame will be discarded 
after decoding. This option is aimed at some video clips which rely
on previous key frames to decode a proper frame.

.TP
.BR " \-\-edge \fIvalue\fP"
Define the thickness of the frame edge around each screenshots.
The thickness is defined by pixel size.
The default value is 0 which means these's no frame edge.

.TP
.BR "\-\-gap\-shots \fIsize_of_gap\fP"
Define the gap size between the tiled screen shots. The size can be defined by pixel 
size or by percentage of the width of the screen shot. For example,
.I "\-\-gap\-shots 4"
means the gap is 4 pixels between each screen shots.
.I "\-\-gap\-shots 4%"
means the gap is 4% of of the width of a single screen shot.

.TP
.BR "\-\-gap\-margin \fIsize_of_margin\fP"
Define the margin size around the thumbnail canvas. The size can be defined 
by pixel size or by percentage of the width of the screen shot. For example,
.I "\-\-gap\-margin 4"
means to keep 4 pixels blank margin.
.I "\-\-gap\-margin 4%"
means the margin is 4% of the width of a single screen shot.

.TP
.BR "\-\-opt\-info \fIon|off\fP"
Turn on or turn off displaying the media information on the top of the
thumbnail canvas. The default is
.I on.

.TP
.BR "\-\-opt\-time \fIon|off\fP"
Turn on or turn off displaying the timestamp inside each screen shots. The default is
.I on.

.TP
.BR "\-\-opt\-ffr \fIon|off\fP"
Turn on or turn off taking screen shots from the first frame. The default is
.I off
because most videos start from a black screen.

.TP
.BR "\-\-opt\-lfr \fIon|off\fP"
Turn on or turn off taking screen shots to the last frame. The default is
.I off
because most videos end at a black screen.

.TP
.BR "\-\-override \fIon|off|copy\fP"
Turn on or turn off overriding existed thumbnails. The third option is
.I copy
which would generate thumbnails named by serial numbers. 
For example, if the thumbnail file should be named
.I video_file_thumb.jpg,
the
.I copy
option would generate
.I video_file_thumb.1.jpg
if
.I video_file_thumb.jpg
existed, or
.I video_file_thumb.2.jpg
if
.I video_file_thumb.1.jpg
existed, etc. The default is
.I copy
option.

Note the serial number is limited to 
.B 255. 
If the limitation is reached, the last one, which should be
.I video_file_thumb.255.jpg
for example, will be overriden.

.TP
.BR "\-\-pos\-bg \fIposition_code ( : qualification )\fP"
Set up the position of the background picture. The default setting is
.I mc.
.br
See 
.B POSITION CODES
for the details.

.TP
.BR "\-\-pos\-time \fIposition_code\fP"
Set up the position of the timestamp inside the screenshots. 
The default setting is
.I rt.
.br
See 
.B POSITION CODES
for the details.

.TP
.BR "\-\-pos\-info \fIposition_code\fP"
Set up the position of the media information. The default setting is
.I lt.
Note that the media information can only be placed on the top of the canvas.
.br
See
.B POSITION CODES
for the details.

.TP
.BR "\-\-time\-from \fIstarting_time\fP"
Specify a time stamp from where the 
.B ezthumb
will start to take shoots. The default setting is from the head of the video.
The time stamp can be defined explicitly by
.I HH:MM:SS
form, or by the percentage of the video length like 
.I 33%
etc. Note that the
.BR "\-\-opt\-ffr
and 
.BR "\-\-opt\-lfr
options are still applicable with this option.

.TP
.BR "\-\-time\-end \fIending_time\fP"
Specify a time stamp to where the 
.B ezthumb
will stop taking shoots. The default setting is the end of the video.
The time stamp can be defined explicitly by
.I HH:MM:SS 
form, or by the percentage of the video length like 
.I 66%
etc. Note that the
.BR "\-\-opt\-ffr
and 
.BR "\-\-opt\-lfr
options are still applicable with this option.

.TP
.BR " \-\-transparent"
Require to generate the transparent background which could be useful for the webpages.
Note that only
.B PNG
and
.B GIF
support the transparent background.

.TP
.BR "\-\-vindex \fIvideo_stream_index\fP"
specify the video stream index number inside the container file.
The default behaviour of
.B ezthumb
is taking screen shots from the first video stream it has met.
This option could override it and take screen shots from any stream.
The stream indexes can be found by 
.BR "\-i"
or
.BR "\-I"
option.

.SH POSITION CODES
Position codes are used to describe the object position in the target image.
There are ten position codes:
.TP
.BR lt
set the object to the left top corner
.TP
.BR lc
set the object to the left center side
.TP
.BR lb
set the object to the left bottom corner
.TP
.BR mt
set the object to the middle top side
.TP
.BR mc
set the object to the middle center
.TP
.BR mb
set the object to the middle bottom side
.TP
.BR rt
set the object to the right top corner
.TP
.BR rc
set the object to the right center side
.TP
.BR rb
set the object to the right bottom side
.TP
.BR tt
tile the object
.PP
For the background picture, the position code can be followed by a 
qualification code:
.TP
.BR st
stretch to fit the whole canvas
.TP
.BR ex
enlarge to fit the width of the canvas. The picture keeps its orignal ratio.
.TP
.BR ey
enlarge to fit the height of the canvas. The picture keeps its orignal ratio.
.TP
.BR sx
stretch the width of the picture to fit the canvas but keep its height same.
.TP
.BR sy
stretch the height of the picture to fit the canvas but keep its width same.

.SH PROFILES
The profile is used to set a group of rules about the geometry size of the 
thumbnails. It can generate different screenshot according to the attribute
of the video clip. For example, it can generate a 4x4 screen shot array 
if the video lasts 30 minute, or generate a 6x8 array if the video lasts 
120 minutes. It can also generate a 240x120 thumbnail if the video frame 
is 160x120, or generate a 320x240 thumbnail if the video frame is 1920x1024.

In general words, there are two types of profiles. One is used to define the 
screen shot array by the length of the video. Another one is used to define 
the size of the thumbnails by the frame size of the videos. These profile
entries can be combined by a
.I ':'
like
.I "12m4x4:30m4x8:90m4x16:320w100%:640w240x180:1280w20%" .

The profile entry has a fixed format
.P
.I WEIGHT + flag + A + 'x' + B + 'x' + C
.P
The
.I WEIGHT
is used to define the length of the video, or width of the video frame.
.B ezthumb
uses it to define the action range. For examples with the profile above,
there are four ranges to make screen shot array by the length of videos: 
0 to 12 minutes, 13 to 30 minutes, 31 to 90 minute and above 90. There are
four ranges video frames to make different size of thumbnails, 0 to 320, 
321 to 640, 640 to 1280 and above 1280 pixels.
The
.I "B"
and
.I "C"
are optional.
The 
.I "flag"
is used to define the action inside the range.
.TP
.BR M/m
generate an A by B screen shot array according to the vide length in minutes
.TP
.BR S/s
generate an A by B screen shot array according to the vide length in seconds
.TP
.BR L/l
take shots by a logarithmic formula. The formula is 
.TP
.BR .
lg(C)(length + A) - B
.TP
.BR .
The 
.I "C"
is the base and the
.I "length"
is the video length in minutes. The screen shot array must be decided by 
combining with 
.I "F"
or
.I "R"
flags.
.TP
.BR W/w
zoom the video frame by the specified ratio.
.I 160W150
means to zoom in 150% of the original video frame.
.TP
.BR T/t
set the size of the thumbnail to the specified size. The 
.I "B"
is optional so 
.B ezthumb
would deduce it by video frame ratio.
.TP
.BR F/f
specifies the fixed canvas size. 
The parameter
.I "A"
is the thumbnails in a row. 
For example the 
.I "100F4x1280"
generates a 1280 pixel picture with 4 thumbnails in a row.
.TP
.BR R/r
The size of the thumbnail fits best the specified width. 
The parameter
.I "A"
is the thumbnails in a row. 
For example the 
.I "100R4x320"
generates 4 thumbnails in a row in the picture, each thumbnail has the size
close to 320 pixel.
.P
For examples, the default profile is
.I "8M4x2:9L10x100x1.027:100R4x320" ,
which means if the video clip lasts 8 minute or less, it generates a 4x2 array;
if the video clips lasts longer than 8 minutes, the number of generated 
thumbnail would be computed by the logarithm formula 
.I ln(1.027)(length+10)-100 
and the final picture would be 4 thumbnails in a row, each width would close
to 320 pixels in width.

.SH EXAMPLES
.B ezthumb "\-g 4x8" "\-s 33%" *.avi
.P
Create the 4x8 thumbnails for all 
.I .avi
files in the current directory. 
Each screen shots inside the thumbnails are 33% of the video frame
in width and height.
.P
.B ezthumb "\-i" *.avi
.P
Display the length, the width and the height of all
.I .avi
files in the current directory.
.P
.B ezthumb "\-g 1x12" "\-s 160x120" "\-\-opt\-ffr on" "\-\-opt\-lfr on" myvideo.avi
.P
Create a 1x12 thumbnail where each screen shot is 160x120 pixels.
Take the screen shots from the first frame to the last frame.
.P
.B ezthumb "\-g 3x6" "\-w 1024" "\-t 60000" "\-\-opt\-info off" "\-m png" "\-\-transparent" myvideo.avi
.P
Create a thumbnail in width of 1024 pixels with 3x6 screen shots inside.
The size of each shots was calculated from this parameter.
The interval between each shots is 60 seconds so it only took shots from first 18 minutes.
Turn off the media information. 
The thumbnail is outputed in PNG format with a transparent background.
.P
.B ezthumb "\-g 0x18" "\-s 120%" "\-\-opt\-time off" myvideo.avi
.P
Generate 18 screen shots which were saved into 18 separated files. 
Each shots were 120% of the video frame in width and height.
The inset timestamps were disabled.
.P
.B ezthumb "\-g 3x6" "\-s 160x120" "\-m gif@1500" myvideo.avi
.P
Generate an animated GIF file which include 18 frames. 
Each frame would be displayed by 1.5 seconds. The size of frames is 160x120.
There is no canvas generated so the  "-g"
option is used for calculating the total shots only. 
.P
.B ezthumb "\-\-accurate" myvideo.avi
.P
Generate a 4x4 thumbnail (the default "-g" parameter).
Each shot is 50% of the video frame in width and height 
(the default "-s" parameter).
The shots were taken in accurate mode so they could be taken 
as close as possible to the specified place.

.SH AUTHOR
"Andy Xuming" <xuming@users.sourceforge.net>


